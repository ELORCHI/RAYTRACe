Implement the world object
    which contain all the object including pl sph ans traingle

Intersect_world ==> intersect_world(world, ray)
    remove the ray object from the world_structure t_world
    
need to change the lighting function to aceept the precompute data structure

Set a default up for the camera view and test if its cross product return a null vector then
change it with another up

in the camera will need the view transformation`
//////code///

first all the intersction functions must change to return the itersection data structure

write precompute which return the hit and the normal of an intersections if exits

intersect_sphere(spheres data_structure and ray)
    iterats all the sphere and retuen a data structure wich contains the intersection its
    normal and hits

intersect_plan(plan data_structute)
    iterates all the plans and return a data structute which contains
    the intersection and its hit and normal

intersect_objects(world, ray)
    iterats all the objects and return the hit and the normal
function intersect_world
    return the color to be drawn of a given ray

