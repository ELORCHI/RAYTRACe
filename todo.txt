
=======		have to do		======

	key												== done			== 
	switch normal if dot with light is negative		== done			==
	shadow											== done			==
	multi defuse lights								== done			== 
	cylindeer multi tracing							== not tested yet	== easy shit
	mlx_images										== not yet		==
	read all from a file and affect to the world	== not yet		==
	bmp file										== not yet		==
	multiple camrera rendring						== not yet		== // put all globals to global after a key or render all at all
	makefile										== not yet		==
=======		going to do		======

	first to do
		let the split skip the spaces ==find an other methode to free the splited line ==
		check if you put next to NULL in tmp 
	finish parsing
		free reading (when checking spaces)
		free objects pasams (when afecting objects) == not yet ==
		free object and rays at_the end				== not yet ==
		
		multiple objects :
			test multiple objects of the same object
				sphere 		== done ==
				planes 		== done ==
				triangles 	== done ==
				square		== done ==
	
	parssing
		linked list	
			plan					== done ==
			square					== done ==
			sphere					== done == 
			triangle				== done	==
			camera 					== done == 
			cylinder				== done ==
			free globals its easy 	== done ==
	
	test likned list adding and delitin;														==done==

	=== do this first === fix multiple objects problem ==										==done==
						  === move to shadow ==
	first to do check camera	(you maight test switich to vector directly for forward vector) ==done==
	
	ask about free and exit 																	==done=	
	
	triangle try to fix ro chagnge 						 										==done==

	fix cylinder or change the algorithm look for traore 										==done==

	fix camera vectors																			==done==
	

   
   void main()
{
    float ambientStrength = 0.1;
    vec3 ambient = ambientStrength * lightColor;

    vec3 result = ambient * objectColor;
    FragColor = vec4(result, 1.0);
}  

